//17dqys 20201118
/* 버그 분석
키패드 모양
123
456
789
*0#


bug001 - 조건문에서 문자열 비교시 "equals"을 사용하지 않은 경우 해당 조건문 "False"로 인식
프로그램 명 : Programmers_Lv1_TouchTheKeypad
증상 : 이클립스 실행시 결과 값과 프로그래머스에서의 결과 값 상이
세부내용 : 매개변수 numbers={5}와 오른손잡이 hand="right"가 입력 되었을 때 목표값 "R"대신 "L" 출력됨
오류구문 : 
if(distance[indexRightPad][indexCenterPad]==distance[indexLeftPad][indexCenterPad] && hand=="right")
오류해결 : hand=="right"에서 hand.equals("right")으로 변경

bug002 - 왼손과 오른손 초기값 위치 중복 설정으로 인한 출력값 오류
증상 : 테스트 케이스{8,0} 입력시 목표값 "RR" 결과값 "RL"로 결과 값 상이
세부내용 : 조건에서 왼손과 오른손의 초기값은 각각 *과 #으로 주어졌으나 연산상 정수로 표현하고자 임의로
0으로 중복 설정/ 최초 8을 찾아가 "R" 출력한 뒤 L=0, R=8인 상태에서 다음 0을 찾아가 L과 R의 거리를 계산시 
L Distance = 0(0에서0), R Distace = 1(8에서0)로 L이 더 가까우므로 "L"을 출력하게 됨. 하지만 실제로 L의 위치는
*에 있으므로 L Distance = 1(*에서0), R Distace = 1(8에서0) 0과 각 두손의 거리는 같으므로 오른손잡이인 "R"을 
출력해야 함
오류구문 : for(int i=0, L=0, R=0; i<numbers.length; i++)
오류해결 : 
- 프로그램 구현상 인덱스 찾기 연산을 해야 하므로 중복되지 않는 정수로 표현 L=10, R=11
 for(int i=0, L=10, R=11; i<numbers.length; i++)
- 인덱스가 추가 된 것이므로 거리배열 2행 추가
int[][] distance = {
      //0 2 5 8
				{0,3,2,1}, //0
				{4,1,2,3}, //1
				{3,0,1,2}, //2
				{4,1,2,3}, //3
				{3,2,1,2}, //4
				{2,1,0,1}, //5
				{3,2,1,2}, //6
				{2,3,2,1}, //7
				{1,2,1,0}, //8
				{2,3,2,1}, //9
		};
    
    추가 
        {1,4,3,2}, //10
				{1,4,3,2}  //11
*과 # 각 위치에서 CenterPad(2,5,8,0)과 의 거리는 같으므로 {1,4,3,2} 두번 입력

*/

 
